#!/usr/bin/env python3
"""
üß† –¢–µ—Å—Ç –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É Zep Memory –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–∞
"""

import requests
import json
import time

BOT_URL = "https://artemassyst-bot-tt5dt.ondigitalocean.app"

def test_bot_status():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ë–û–¢–ê:")
    try:
        response = requests.get(f"{BOT_URL}/", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°—Ç–∞—Ç—É—Å: {data.get('status')}")
            print(f"ü§ñ AI: {data.get('ai_status')}")
            
            debug_info = data.get('debug_info', {})
            print(f"üìä Zep –∫–ª–∏–µ–Ω—Ç: {debug_info.get('zep_client')}")
            print(f"üîó OpenAI: {'‚úÖ' if debug_info.get('openai_enabled') else '‚ùå'}")
            print(f"üîó Anthropic: {'‚úÖ' if debug_info.get('anthropic_enabled') else '‚ùå'}")
            print(f"üìà –°–µ—Å—Å–∏–π: {debug_info.get('user_sessions_count', 0)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            last_update = debug_info.get('last_update_time')
            if last_update:
                print(f"‚è∞ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {last_update}")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_memory_endpoint():
    """–¢–µ—Å—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞–º—è—Ç–∏"""
    print("\nüß† –¢–ï–°–¢ –ü–ê–ú–Ø–¢–ò:")
    test_session = "user_123456789"  # —Ç–µ—Å—Ç–æ–≤–∞—è —Å–µ—Å—Å–∏—è
    
    try:
        response = requests.get(f"{BOT_URL}/debug/memory/{test_session}", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç –ø–∞–º—è—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä –°–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ—Å—Å–∏–∏: {data.get('message_count', 0)}")
            return True
        else:
            print(f"‚ùå –≠–Ω–¥–ø–æ–∏–Ω—Ç –ø–∞–º—è—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ –ø–∞–º—è—Ç–∏: {e}")
        return False

def check_version_update():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–∏–ª–∞—Å—å –ª–∏ –≤–µ—Ä—Å–∏—è"""
    print("\nüîÑ –ü–†–û–í–ï–†–ö–ê –í–ï–†–°–ò–ò:")
    try:
        response = requests.get(f"{BOT_URL}/", timeout=10)
        if response.status_code == 200:
            data = response.json()
            version_info = data.get('debug_info', {}).get('version_info', {})
            last_commit = version_info.get('last_commit_sha', '')
            
            # –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 5a3dcb7c
            if last_commit.startswith('5a3dcb7c'):
                print(f"‚úÖ –í–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {last_commit}")
                print("üéâ –ù–æ–≤—ã–π –∫–æ–¥ —Å —Ä–æ—É—Ç–µ—Ä–æ–º LLM –∞–∫—Ç–∏–≤–µ–Ω!")
                return True
            else:
                print(f"‚ö†Ô∏è –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è: {last_commit}")
                print("üîÑ –î–µ–ø–ª–æ–π –µ—â–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è")
                return False
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–∏: {e}")
        return False

def main():
    print("üß† –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–ú–Ø–¢–ò ARTEMASSYST –ë–û–¢–ê")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    bot_ok = test_bot_status()
    
    if not bot_ok:
        print("\n‚ùå –ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
    version_ok = check_version_update()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞–º—è—Ç—å
    memory_ok = test_memory_endpoint()
    
    print("\n" + "="*50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    
    if bot_ok:
        print("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ùå –ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    
    if version_ok:
        print("‚úÖ –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞")
    else:
        print("‚ö†Ô∏è –°—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è (–¥–µ–ø–ª–æ–π –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω)")
    
    if memory_ok:
        print("‚úÖ –≠–Ω–¥–ø–æ–∏–Ω—Ç –ø–∞–º—è—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–∞–º—è—Ç—å—é")
    
    if version_ok and memory_ok:
        print("\nüéØ –ì–û–¢–û–í –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ –î–ò–ê–õ–û–ì–ê!")
        print("–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø–∞–º—è—Ç—å")
    else:
        print("\n‚è≥ –û–ñ–ò–î–ê–ù–ò–ï –î–ï–ü–õ–û–Ø...")
        print("–ù—É–∂–Ω–æ –¥–æ–∂–¥–∞—Ç—å—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π")
    
    print("="*50)

if __name__ == "__main__":
    main()