#!/usr/bin/env python3
"""
–õ–æ–∫–∞–ª—å–Ω—ã–π OAuth —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è authorization code
"""

import json
import urllib.parse
from http.server import HTTPServer, BaseHTTPRequestHandler
import threading
import webbrowser
import time

CREDENTIALS_FILE = 'credentials/client_secret.json'
auth_code = None

class OAuthHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        global auth_code
        if self.path.startswith('/?'):
            # –ü–∞—Ä—Å–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            query = self.path[2:]  # —É–±–∏—Ä–∞–µ–º /?
            params = urllib.parse.parse_qs(query)
            
            if 'code' in params:
                auth_code = params['code'][0]
                self.send_response(200)
                self.send_header('Content-type', 'text/html; charset=utf-8')
                self.end_headers()
                
                success_html = """
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset="utf-8">
                    <title>OAuth2 Success</title>
                    <style>
                        body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
                        .success { color: green; font-size: 24px; margin-bottom: 20px; }
                        .code { background: #f5f5f5; padding: 10px; font-family: monospace; border: 1px solid #ddd; margin: 20px 0; }
                    </style>
                </head>
                <body>
                    <div class="success">‚úÖ OAuth2 Authorization Successful!</div>
                    <p>Authorization code –ø–æ–ª—É—á–µ–Ω:</p>
                    <div class="code">{}</div>
                    <p>–ú–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç–æ –æ–∫–Ω–æ. –¢–æ–∫–µ–Ω –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.</p>
                </body>
                </html>
                """.format(auth_code)
                
                self.wfile.write(success_html.encode('utf-8'))
                
                # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
                threading.Timer(1.0, lambda: self.server.shutdown()).start()
                
            elif 'error' in params:
                error = params['error'][0]
                self.send_response(400)
                self.send_header('Content-type', 'text/html; charset=utf-8')
                self.end_headers()
                
                error_html = f"""
                <!DOCTYPE html>
                <html>
                <head>
                    <meta charset="utf-8">
                    <title>OAuth2 Error</title>
                </head>
                <body>
                    <h1>‚ùå OAuth2 Error</h1>
                    <p>Error: {error}</p>
                </body>
                </html>
                """
                self.wfile.write(error_html.encode('utf-8'))
        else:
            self.send_response(404)
            self.end_headers()

    def log_message(self, format, *args):
        # –û—Ç–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞
        pass

def start_oauth_flow():
    print("üöÄ –õ–û–ö–ê–õ–¨–ù–´–ô OAuth2 –°–ï–†–í–ï–†")
    print("=" * 60)
    
    # –ß–∏—Ç–∞–µ–º credentials
    try:
        with open(CREDENTIALS_FILE, 'r') as f:
            config = json.load(f)
        client_id = config['installed']['client_id']
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è credentials: {e}")
        return None
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
    server = HTTPServer(('localhost', 8080), OAuthHandler)
    server_thread = threading.Thread(target=server.serve_forever)
    server_thread.daemon = True
    server_thread.start()
    
    print(f"üåê –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞: http://localhost:8080")
    print(f"üÜî Client ID: {client_id}")
    print()
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º OAuth URL —Å localhost redirect
    redirect_uri = "http://localhost:8080"
    scope = "https://www.googleapis.com/auth/spreadsheets"
    
    params = {
        'client_id': client_id,
        'redirect_uri': redirect_uri,
        'scope': scope,
        'response_type': 'code',
        'access_type': 'offline',
        'include_granted_scopes': 'true'
    }
    
    base_url = "https://accounts.google.com/o/oauth2/v2/auth"
    query_string = urllib.parse.urlencode(params)
    oauth_url = f"{base_url}?{query_string}"
    
    print("üîó OAuth URL (–±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏):")
    print("=" * 80)
    print(oauth_url)
    print("=" * 80)
    print()
    
    print("üìã –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...")
    print("   1. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫: aleynikov.artem@gmail.com")
    print("   2. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ Google Sheets")
    print("   3. –ö–æ–¥ –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    print()
    
    # –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    time.sleep(3)
    try:
        webbrowser.open(oauth_url)
        print("üåê –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: {e}")
        print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –≤—ã—à–µ –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ –≤—Ä—É—á–Ω—É—é")
    
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ authorization code...")
    
    # –ñ–¥–µ–º –∫–æ–¥ –¥–æ 5 –º–∏–Ω—É—Ç
    timeout = 300  # 5 –º–∏–Ω—É—Ç
    start_time = time.time()
    
    while auth_code is None and (time.time() - start_time) < timeout:
        time.sleep(1)
    
    server.shutdown()
    
    if auth_code:
        print(f"‚úÖ Authorization code –ø–æ–ª—É—á–µ–Ω: {auth_code[:50]}...")
        return auth_code
    else:
        print("‚ùå Timeout: authorization code –Ω–µ –ø–æ–ª—É—á–µ–Ω")
        return None

if __name__ == "__main__":
    code = start_oauth_flow()
    if code:
        print()
        print("üéâ –£—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        try:
            from save_token import save_token
            success = save_token(code)
            
            if success:
                print("‚úÖ –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç Google Sheets...")
                
                # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
                from test_sheets import test_sheets
                test_success = test_sheets()
                
                if test_success:
                    print()
                    print("üöÄ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø GOOGLE SHEETS –ì–û–¢–û–í–ê!")
                    print("=" * 80)
                    print("‚úÖ OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
                    print("‚úÖ Google —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞")  
                    print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–æ—Ç–æ–º –≥–æ—Ç–æ–≤–∞")
                else:
                    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Google —Ç–∞–±–ª–∏—Ü—ã")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞")
                
        except ImportError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python save_token.py {code}")
    else:
        print("‚ùå OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")