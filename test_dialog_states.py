#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–∏–∞–ª–æ–≥–∞
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from bot.memory.extractors import LeadDataExtractor, DialogStateExtractor
from bot.memory.models import LeadData, DialogState

def test_dialog_state_transitions():
    """–¢–µ—Å—Ç –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–∏–∞–ª–æ–≥–∞"""
    
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–∏–∞–ª–æ–≥–∞...")
    print("=" * 60)
    
    # –°—Ü–µ–Ω–∞—Ä–∏–π: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ä–∞–∑—É –≥–æ–≤–æ—Ä–∏—Ç "–¥–æ–º, –¥–æ 5 –º–ª–Ω —Ä—É–±–ª–µ–π"
    lead = LeadData()
    lead.current_dialog_state = DialogState.S4_REQUIREMENTS  # –°–æ—Å—Ç–æ—è–Ω–∏–µ "—Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ–±—ä–µ–∫—Ç—É"
    
    message = "–¥–æ–º, –¥–æ 5 –º–ª–Ω —Ä—É–±–ª–µ–π"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    updated_lead = LeadDataExtractor.extract_from_message(message, lead)
    
    print(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ: '{message}'")
    print(f"üè† –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π —Ç–∏–ø: {getattr(updated_lead, 'property_type', None)}")
    print(f"üí∞ –ò–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π –±—é–¥–∂–µ—Ç: {updated_lead.budget_max}")
    print(f"üìç –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {updated_lead.current_dialog_state}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    new_state = DialogStateExtractor.determine_state(
        message, 
        updated_lead.current_dialog_state, 
        updated_lead
    )
    
    print(f"üîÑ –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {new_state}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if new_state == DialogState.S5_BUDGET:
        print("‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –Ω–∞ S5_BUDGET (—Ç–∞–∫ –∫–∞–∫ —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω)")
    else:
        print(f"‚ùå –û–®–ò–ë–ö–ê: –û–∂–∏–¥–∞–ª—Å—è S5_BUDGET, –ø–æ–ª—É—á–µ–Ω {new_state}")
    
    print()
    
    # –¢–µ—Å—Ç 2: —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞—Ü–∏—è –±–µ–∑ —Ç–∏–ø–∞
    print("üìç –¢–µ—Å—Ç 2: –¢–æ–ª—å–∫–æ –ª–æ–∫–∞—Ü–∏—è –±–µ–∑ —Ç–∏–ø–∞...")
    lead2 = LeadData()
    lead2.current_dialog_state = DialogState.S4_REQUIREMENTS
    message2 = "–ö—Ä–∞—Å–Ω–∞—è –ü–æ–ª—è–Ω–∞"
    
    updated_lead2 = LeadDataExtractor.extract_from_message(message2, lead2)
    new_state2 = DialogStateExtractor.determine_state(message2, updated_lead2.current_dialog_state, updated_lead2)
    
    print(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ: '{message2}'")
    print(f"üìç –õ–æ–∫–∞—Ü–∏–∏: {updated_lead2.preferred_locations}")
    print(f"üîÑ –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {new_state2}")
    
    if new_state2 == DialogState.S5_BUDGET:
        print("‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –±—é–¥–∂–µ—Ç (–ª–æ–∫–∞—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞)")
    else:
        print(f"‚ùå –û–®–ò–ë–ö–ê: –û–∂–∏–¥–∞–ª—Å—è –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –±—é–¥–∂–µ—Ç")
    
    print()
    
    # –¢–µ—Å—Ç 3: –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ
    print("‚ùì –¢–µ—Å—Ç 3: –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    lead3 = LeadData()
    lead3.current_dialog_state = DialogState.S4_REQUIREMENTS
    message3 = "–Ω–µ –∑–Ω–∞—é –µ—â–µ"
    
    updated_lead3 = LeadDataExtractor.extract_from_message(message3, lead3)
    new_state3 = DialogStateExtractor.determine_state(message3, updated_lead3.current_dialog_state, updated_lead3)
    
    print(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ: '{message3}'")
    print(f"üîÑ –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {new_state3}")
    
    if new_state3 == DialogState.S4_REQUIREMENTS:
        print("‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: –û—Å—Ç–∞–µ—Ç—Å—è –≤ S4_REQUIREMENTS (–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)")
    else:
        print(f"‚ùå –û–®–ò–ë–ö–ê: –î–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è –≤ S4_REQUIREMENTS")

def test_context_building():
    """–¢–µ—Å—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è LLM"""
    
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è LLM...")
    print("=" * 60)
    
    lead = LeadData()
    lead.name = "–ê—Ä—Ç–µ–º"
    lead.property_type = "–¥–æ–º"
    lead.budget_max = 5000000
    lead.preferred_locations = ["–ö—Ä–∞—Å–Ω–∞—è –ü–æ–ª—è–Ω–∞"]
    lead.current_dialog_state = DialogState.S4_REQUIREMENTS
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    client_info = []
    if lead.name:
        client_info.append(f"–ò–º—è: {lead.name}")
    if getattr(lead, 'property_type', None):
        client_info.append(f"–¢–∏–ø: {lead.property_type}")
    if lead.budget_max:
        client_info.append(f"–ë—é–¥–∂–µ—Ç –¥–æ: {lead.budget_max} —Ä—É–±")
    if lead.preferred_locations:
        locations = ", ".join(lead.preferred_locations)
        client_info.append(f"–õ–æ–∫–∞—Ü–∏–∏: {locations}")
    
    context = f"–î–ê–ù–ù–´–ï –ö–õ–ò–ï–ù–¢–ê: {' | '.join(client_info)}"
    state_desc = "–í—ã—è—Å–Ω–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ–±—ä–µ–∫—Ç—É (—Ç–∏–ø, –ª–æ–∫–∞—Ü–∏—è, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã)"
    
    print("–ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è LLM:")
    print(context)
    print(f"–≠–¢–ê–ü –î–ò–ê–õ–û–ì–ê: {lead.current_dialog_state.value} - {state_desc}")
    print()
    
    if "–¢–∏–ø: –¥–æ–º" in context:
        print("‚úÖ LLM –≤–∏–¥–∏—Ç —á—Ç–æ —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞ —É–∂–µ –∏–∑–≤–µ—Å—Ç–µ–Ω")
    else:
        print("‚ùå LLM –ù–ï –≤–∏–¥–∏—Ç —Ç–∏–ø –æ–±—ä–µ–∫—Ç–∞")
    
    if "–Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è" in state_desc:
        print("‚úÖ LLM –ø–æ–Ω–∏–º–∞–µ—Ç —á—Ç–æ –Ω—É–∂–Ω–æ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
    else:
        print("‚ùå LLM –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —É–∂–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")

if __name__ == "__main__":
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ª–æ–≥–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–∏–∞–ª–æ–≥–∞\n")
    
    test_dialog_state_transitions()
    test_context_building()
    
    print("\nüìã –ò–¢–û–ì: –ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ - –±–æ—Ç –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ—Å—Ç–∞—Ç—å –ø–æ–≤—Ç–æ—Ä—è—Ç—å –≤–æ–ø—Ä–æ—Å—ã")