#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è Google —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
"""

import os
from google.oauth2.credentials import Credentials
from googleapiclient.discovery import build

SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
TOKEN_FILE = 'credentials/token.json'

def test_sheets():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    if not os.path.exists(TOKEN_FILE):
        print(f"‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω: {TOKEN_FILE}")
        print("üîß –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é")
        return False
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω
        creds = Credentials.from_authorized_user_file(TOKEN_FILE, SCOPES)
        
        if not creds.valid:
            print("‚ùå –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
            return False
        
        print("‚úÖ –¢–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≤–∞–ª–∏–¥–µ–Ω")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å
        service = build('sheets', 'v4', credentials=creds)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        drive_service = build('drive', 'v3', credentials=creds)
        about = drive_service.about().get(fields="user").execute()
        user = about.get('user', {})
        
        print(f"üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: {user.get('displayName', 'Unknown')}")
        print(f"üìß Email: {user.get('emailAddress', 'Unknown')}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
        spreadsheet = {
            'properties': {
                'title': '–ê–ª–µ–Ω–∞ - CRM –¥–∞–Ω–Ω—ã–µ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
                'locale': 'ru_RU',
                'timeZone': 'Europe/Moscow'
            },
            'sheets': [
                {
                    'properties': {
                        'title': '–ö–ª–∏–µ–Ω—Ç—ã (–õ–∏–¥—ã)',
                        'gridProperties': {'rowCount': 1000, 'columnCount': 32}
                    }
                },
                {
                    'properties': {
                        'title': '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π',
                        'gridProperties': {'rowCount': 1000, 'columnCount': 4}
                    }
                },
                {
                    'properties': {
                        'title': '–í–æ—Ä–æ–Ω–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏',
                        'gridProperties': {'rowCount': 100, 'columnCount': 4}
                    }
                },
                {
                    'properties': {
                        'title': '–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                        'gridProperties': {'rowCount': 365, 'columnCount': 6}
                    }
                }
            ]
        }
        
        result = service.spreadsheets().create(body=spreadsheet).execute()
        spreadsheet_id = result['spreadsheetId']
        url = f"https://docs.google.com/spreadsheets/d/{spreadsheet_id}"
        
        print()
        print("üéâ Google —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä ID: {spreadsheet_id}")
        print(f"üîó URL: {url}")
        print()
        
        # –î–æ–±–∞–≤–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ª–∏—Å—Ç–∞ "–ö–ª–∏–µ–Ω—Ç—ã"
        headers = [
            'ID —Å–µ—Å—Å–∏–∏', '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è', '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', '–ò–º—è', '–¢–µ–ª–µ—Ñ–æ–Ω',
            'Telegram Username', 'WhatsApp', '–ì–æ—Ä–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞', '–ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –°–æ—á–∏ —Å–µ–π—á–∞—Å',
            '–î–∞—Ç–∞ –ø—Ä–∏–ª—ë—Ç–∞', '–ú–µ—Å—Ç–Ω—ã–π –∂–∏—Ç–µ–ª—å', '–¶–µ–ª—å –ø–æ–∫—É–ø–∫–∏', '–§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã',
            '–ë–∞–Ω–∫', '–ù—É–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å —Å–≤–æ—ë', '–ë—é–¥–∂–µ—Ç –º–∏–Ω', '–ë—é–¥–∂–µ—Ç –º–∞–∫—Å',
            '–õ–æ–∫–∞—Ü–∏–∏', '–¢–∏–ø –æ–±—ä–µ–∫—Ç–∞', '–ü–∞—Ä–∞–º–µ—Ç—Ä—ã', '–û–ø—ã—Ç –≤ –°–æ—á–∏',
            '–°—Ä–æ—á–Ω–æ—Å—Ç—å', '–£–¥–∞–ª—ë–Ω–Ω–∞—è —Å–¥–µ–ª–∫–∞', '–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –æ–Ω–ª–∞–π–Ω-–ø–æ–∫–∞–∑—É',
            '–ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª–æ—Ç—ã', '–ö–∞–Ω–∞–ª —Å–≤—è–∑–∏', '–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è',
            '–°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ', '–ù–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä', 'UTM –∏—Å—Ç–æ—á–Ω–∏–∫',
            '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏', '–°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞'
        ]
        
        body = {'values': [headers]}
        service.spreadsheets().values().update(
            spreadsheetId=spreadsheet_id,
            range='–ö–ª–∏–µ–Ω—Ç—ã (–õ–∏–¥—ã)!A1:AF1',
            valueInputOption='RAW',
            body=body
        ).execute()
        
        print("‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ª–∏—Å—Ç '–ö–ª–∏–µ–Ω—Ç—ã (–õ–∏–¥—ã)'")
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        requests = [{
            'repeatCell': {
                'range': {
                    'sheetId': 0,
                    'startRowIndex': 0,
                    'endRowIndex': 1,
                    'startColumnIndex': 0,
                    'endColumnIndex': len(headers)
                },
                'cell': {
                    'userEnteredFormat': {
                        'backgroundColor': {'red': 0.9, 'green': 0.9, 'blue': 0.9},
                        'textFormat': {'bold': True}
                    }
                },
                'fields': 'userEnteredFormat(backgroundColor,textFormat)'
            }
        }]
        
        batch_request = {'requests': requests}
        service.spreadsheets().batchUpdate(
            spreadsheetId=spreadsheet_id,
            body=batch_request
        ).execute()
        
        print("‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        print()
        print("üöÄ Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞!")
        print("üìã –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ —Å GOOGLE_SHEETS_ENABLED=true")
        print("2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å: GET /admin/sheets/status")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é: POST /admin/sheets/sync")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_sheets()