#!/usr/bin/env python3
"""
üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º —Å GitHub integration
"""

import requests
import json
from datetime import datetime, timezone

GITHUB_REPO = "Timosan61/artemassyst"
GITHUB_API = f"https://api.github.com/repos/{GITHUB_REPO}"

print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è artemassyst...")
print("="*60)

def check_github_repo():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"""
    print("\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê GITHUB –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø:")
    try:
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
        repo_response = requests.get(GITHUB_API)
        if repo_response.status_code == 200:
            repo_data = repo_response.json()
            print(f"‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repo_data['full_name']}")
            print(f"üìä –ü–æ—Å–ª–µ–¥–Ω–∏–π push: {repo_data['pushed_at']}")
            print(f"üåø –í–µ—Ç–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {repo_data['default_branch']}")
            print(f"üîì –ü—É–±–ª–∏—á–Ω—ã–π: {not repo_data['private']}")
            print(f"‚≠ê Stars: {repo_data['stargazers_count']}")
            return repo_data
        else:
            print(f"‚ùå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {repo_response.status_code}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

def check_recent_commits():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã"""
    print("\n2Ô∏è‚É£ –ü–û–°–õ–ï–î–ù–ò–ï –ö–û–ú–ú–ò–¢–´:")
    try:
        commits_response = requests.get(f"{GITHUB_API}/commits", params={"per_page": 5})
        if commits_response.status_code == 200:
            commits = commits_response.json()
            for i, commit in enumerate(commits):
                sha = commit['sha'][:8]
                message = commit['commit']['message'].split('\n')[0]
                date = commit['commit']['author']['date']
                
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç
                commit_date = datetime.fromisoformat(date.replace('Z', '+00:00'))
                time_ago = datetime.now(timezone.utc) - commit_date
                
                if time_ago.days > 0:
                    time_str = f"{time_ago.days} –¥–Ω–µ–π –Ω–∞–∑–∞–¥"
                elif time_ago.seconds > 3600:
                    time_str = f"{time_ago.seconds // 3600} —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥"  
                else:
                    time_str = f"{time_ago.seconds // 60} –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥"
                
                print(f"  {i+1}. {sha} - {message}")
                print(f"     üìÖ {date} ({time_str})")
            
            return commits
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–æ–≤: {commits_response.status_code}")
            return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return []

def check_webhooks():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å webhooks (—Ç—Ä–µ–±—É–µ—Ç —Ç–æ–∫–µ–Ω, –Ω–æ –ø–æ–∫–∞–∂–µ–º —á—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å)"""
    print("\n3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê WEBHOOKS:")
    print("‚ö†Ô∏è –î–ª—è –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω—É–∂–µ–Ω GitHub —Ç–æ–∫–µ–Ω")
    print("üìã –ß—Ç–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ GitHub:")
    print("   ‚Ä¢ Settings ‚Üí Webhooks")
    print("   ‚Ä¢ –î–æ–ª–∂–µ–Ω –±—ã—Ç—å webhook –æ—Ç Digital Ocean")
    print("   ‚Ä¢ URL –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å: hooks.digitalocean.com")
    print("   ‚Ä¢ Events: push, pull_request")
    print("   ‚Ä¢ Status: –∞–∫—Ç–∏–≤–Ω—ã–π (–∑–µ–ª–µ–Ω–∞—è –≥–∞–ª–æ—á–∫–∞)")

def analyze_deployment_issues():
    """–ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º"""
    print("\n4Ô∏è‚É£ –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ü–†–û–ë–õ–ï–ú:")
    
    issues = [
        "üî∏ GitHub integration –æ—Ç–∫–ª—é—á–µ–Ω –≤ Digital Ocean",
        "üî∏ Webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–ª–∏ —É–¥–∞–ª–µ–Ω",
        "üî∏ Digital Ocean –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é",
        "üî∏ –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –¥–µ–ø–ª–æ–µ–≤ –≤ –º–µ—Å—è—Ü",
        "üî∏ –ö–æ–Ω—Ñ–ª–∏–∫—Ç —Å —Ä—É—á–Ω—ã–º–∏ –¥–µ–ø–ª–æ—è–º–∏",
        "üî∏ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å GitHub API",
        "üî∏ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –≤–µ—Ç–∫–∞ –∏–ª–∏ –ø—É—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö"
    ]
    
    for issue in issues:
        print(f"   {issue}")

def check_do_server():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞ Digital Ocean"""
    print("\n5Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–ï–†–í–ï–†–ê DIGITAL OCEAN:")
    try:
        response = requests.get("https://artemassyst-bot-tt5dt.ondigitalocean.app/", timeout=10)
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
            print(f"üìä –°—Ç–∞—Ç—É—Å: {data.get('status', 'Unknown')}")
            print(f"ü§ñ AI —Å—Ç–∞—Ç—É—Å: {data.get('ai_status', 'Unknown')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            debug_info = data.get('debug_info', {})
            last_update = debug_info.get('last_update_time')
            if last_update:
                print(f"üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É: {last_update}")
            
            return True
        else:
            print(f"‚ùå –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –∫–æ–¥: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False

def provide_solutions():
    """–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–µ—à–µ–Ω–∏—è"""
    print("\n6Ô∏è‚É£ –†–ï–®–ï–ù–ò–Ø –î–õ–Ø –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø –ê–í–¢–û–î–ï–ü–õ–û–Ø:")
    
    print("\nüîß –ë–´–°–¢–†–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï:")
    print("1. Digital Ocean Dashboard ‚Üí Apps ‚Üí artemassyst")
    print("2. Settings ‚Üí General ‚Üí Source Code")
    print("3. –ù–∞–∂–∞—Ç—å 'Edit' —Ä—è–¥–æ–º —Å GitHub")
    print("4. –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å GitHub (Reconnect)")
    print("5. –í—ã–±—Ä–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: Timosan61/artemassyst")
    print("6. –í—ã–±—Ä–∞—Ç—å –≤–µ—Ç–∫—É: main")
    print("7. –í–∫–ª—é—á–∏—Ç—å 'Autodeploy: ON'")
    print("8. Save")
    
    print("\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:")
    print("–ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:")
    print("  git commit --allow-empty -m 'test: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–¥–µ–ø–ª–æ—è'")
    print("  git push origin main")
    print("  # –ß–µ—Ä–µ–∑ 2-3 –º–∏–Ω—É—Ç—ã –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –Ω–æ–≤—ã–π –¥–µ–ø–ª–æ–π")
    
    print("\nüìã –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ï –†–ï–®–ï–ù–ò–Ø:")
    print("‚Ä¢ –ï—Å–ª–∏ –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç - —É–¥–∞–ª–∏—Ç—å –∏ –∑–∞–Ω–æ–≤–æ —Å–æ–∑–¥–∞—Ç—å GitHub –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
    print("‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ GitHub App 'DigitalOcean App Platform'")
    print("‚Ä¢ –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Digital Ocean")
    
    print("\n‚ö° –í–†–ï–ú–ï–ù–ù–û–ï –†–ï–®–ï–ù–ò–ï:")
    print("‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä—É—á–Ω–æ–π –¥–µ–ø–ª–æ–π –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏")
    print("‚Ä¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å GitHub Actions –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏")

def main():
    print(f"üîó GitHub Repo: {GITHUB_REPO}")
    print(f"üåê Digital Ocean App: artemassyst-bot-tt5dt.ondigitalocean.app")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º—Å—è –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    repo_data = check_github_repo()
    commits = check_recent_commits()
    check_webhooks()
    analyze_deployment_issues()
    server_ok = check_do_server()
    provide_solutions()
    
    print("\n" + "="*60)
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:")
    
    if repo_data and commits and server_ok:
        print("‚úÖ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
        print("‚úÖ –ö–æ–º–º–∏—Ç—ã –ø–æ—Å—Ç—É–ø–∞—é—Ç —Ä–µ–≥—É–ª—è—Ä–Ω–æ")
        print("‚úÖ Digital Ocean —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
        print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤ GitHub integration")
        print("üîß –î–ï–ô–°–¢–í–ò–ï: –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å GitHub –≤ Digital Ocean")
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏")
        print("üîß –î–ï–ô–°–¢–í–ò–ï: –°–Ω–∞—á–∞–ª–∞ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã")
    
    print("="*60)

if __name__ == "__main__":
    main()