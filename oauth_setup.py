#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è Google Sheets
"""

import os
import asyncio
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
SCOPES = ['https://www.googleapis.com/auth/spreadsheets']
CREDENTIALS_FILE = 'credentials/client_secret.json'
TOKEN_FILE = 'credentials/token.json'

def authenticate():
    """OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"""
    creds = None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–æ–∫–µ–Ω
    if os.path.exists(TOKEN_FILE):
        creds = Credentials.from_authorized_user_file(TOKEN_FILE, SCOPES)
    
    # –ï—Å–ª–∏ –Ω–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            print("üîÑ –û–±–Ω–æ–≤–ª—è—é –∏—Å—Ç–µ–∫—à–∏–π —Ç–æ–∫–µ–Ω...")
            creds.refresh(Request())
            print("‚úÖ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω")
        else:
            print("üÜï –ó–∞–ø—É—Å–∫–∞—é –Ω–æ–≤—É—é OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
            flow = InstalledAppFlow.from_client_secrets_file(CREDENTIALS_FILE, SCOPES)
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
            try:
                creds = flow.run_local_server(port=0, open_browser=False)
                print("‚úÖ OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —á–µ—Ä–µ–∑ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä")
            except Exception as e:
                print(f"‚ö†Ô∏è –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
                print("üìã –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä—É—á–Ω–æ–º—É —Ä–µ–∂–∏–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
                
                flow.redirect_uri = 'http://localhost'
                auth_url, _ = flow.authorization_url(
                    access_type='offline',
                    include_granted_scopes='true'
                )
                
                print(f"\nüîó –û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ:")
                print(f"{auth_url}\n")
                print("üìã –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ authorization code –∏–∑ URL")
                
                auth_code = input("–í–≤–µ–¥–∏—Ç–µ authorization code: ").strip()
                flow.fetch_token(code=auth_code)
                creds = flow.credentials
                print("‚úÖ –†—É—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
        with open(TOKEN_FILE, 'w') as token:
            token.write(creds.to_json())
        print(f"üíæ –¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {TOKEN_FILE}")
    
    return creds

def test_api_access(creds):
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ API"""
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å
        service = build('sheets', 'v4', credentials=creds)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ Drive API
        drive_service = build('drive', 'v3', credentials=creds)
        about = drive_service.about().get(fields="user").execute()
        user = about.get('user', {})
        
        print(f"üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {user.get('displayName', 'Unknown')}")
        print(f"üìß Email: {user.get('emailAddress', 'Unknown')}")
        
        return service
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ API: {e}")
        return None

def create_test_spreadsheet(service):
    """–°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É"""
    try:
        spreadsheet = {
            'properties': {
                'title': '–ê–ª–µ–Ω–∞ - CRM –¥–∞–Ω–Ω—ã–µ (–¢–µ—Å—Ç)',
                'locale': 'ru_RU',
                'timeZone': 'Europe/Moscow'
            },
            'sheets': [{
                'properties': {
                    'title': '–¢–µ—Å—Ç',
                    'gridProperties': {
                        'rowCount': 10,
                        'columnCount': 5
                    }
                }
            }]
        }
        
        result = service.spreadsheets().create(body=spreadsheet).execute()
        spreadsheet_id = result['spreadsheetId']
        url = f"https://docs.google.com/spreadsheets/d/{spreadsheet_id}"
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞!")
        print(f"üìä ID: {spreadsheet_id}")
        print(f"üîó URL: {url}")
        
        # –î–æ–±–∞–≤–∏–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        values = [
            ['–ò–º—è', '–¢–µ–ª–µ—Ñ–æ–Ω', '–ì–æ—Ä–æ–¥', '–¶–µ–ª—å', '–ë—é–¥–∂–µ—Ç'],
            ['–¢–µ—Å—Ç –ò–≤–∞–Ω–æ–≤', '+7 900 123 45 67', '–ú–æ—Å–∫–≤–∞', '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏', '10 –º–ª–Ω']
        ]
        
        body = {'values': values}
        service.spreadsheets().values().update(
            spreadsheetId=spreadsheet_id,
            range='–¢–µ—Å—Ç!A1:E2',
            valueInputOption='RAW',
            body=body
        ).execute()
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        
        return spreadsheet_id, url
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: {e}")
        return None, None

def main():
    print("üöÄ OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è Google Sheets API")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if not os.path.exists(CREDENTIALS_FILE):
        print(f"‚ùå –§–∞–π–ª {CREDENTIALS_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üìã –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª —Å OAuth2 —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ Google")
        return
    
    try:
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        creds = authenticate()
        if not creds:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            return
        
        # –¢–µ—Å—Ç API
        service = test_api_access(creds)
        if not service:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API")
            return
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
        spreadsheet_id, url = create_test_spreadsheet(service)
        
        print("\n" + "=" * 50)
        print("üéâ OAuth2 –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        if spreadsheet_id:
            print(f"üìä Google —Ç–∞–±–ª–∏—Ü–∞ –≥–æ—Ç–æ–≤–∞: {url}")
            print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Google Sheets –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ GOOGLE_SHEETS_ENABLED=true –≤ .env")
        print("2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: GET /admin/sheets/status")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()