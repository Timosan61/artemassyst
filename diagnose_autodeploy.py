#!/usr/bin/env python3
"""
üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è Digital Ocean
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ—á–µ–º—É –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç GitHub integration
"""

import requests
import json
from datetime import datetime

APP_ID = "86f72a9c-8404-4fc5-82c7-081931df3ba9"
GITHUB_REPO = "Timosan61/artemassyst"

print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è artemassyst...")
print(f"App ID: {APP_ID}")
print(f"GitHub: {GITHUB_REPO}")
print("="*60)

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã –≤ GitHub
print("\n1Ô∏è‚É£ –ü–û–°–õ–ï–î–ù–ò–ï –ö–û–ú–ú–ò–¢–´ –í GITHUB:")
try:
    github_response = requests.get(f"https://api.github.com/repos/{GITHUB_REPO}/commits", 
                                  params={"per_page": 5})
    if github_response.status_code == 200:
        commits = github_response.json()
        for i, commit in enumerate(commits):
            sha = commit['sha'][:8]
            message = commit['commit']['message'].split('\n')[0]
            date = commit['commit']['author']['date']
            print(f"  {i+1}. {sha} - {message}")
            print(f"     üìÖ {date}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–æ–≤: {github_response.status_code}")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ GitHub API: {e}")

# 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
print("\n2Ô∏è‚É£ –°–¢–ê–¢–£–° –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø DIGITAL OCEAN:")
print("(–ù–µ–æ–±—Ö–æ–¥–∏–º DIGITALOCEAN_TOKEN –¥–ª—è –ø–æ–ª–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)")

# 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ–ø–ª–æ—è
print("\n3Ô∏è‚É£ –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ü–†–û–ë–õ–ï–ú:")
print("üî∏ GitHub integration –æ—Ç–∫–ª—é—á–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω")
print("üî∏ Webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏")
print("üî∏ Digital Ocean –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é")
print("üî∏ –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –¥–µ–ø–ª–æ–µ–≤ –∏–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã")
print("üî∏ –û—à–∏–±–∫–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è")

# 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
print("\n4Ô∏è‚É£ –î–û–°–¢–£–ü–ù–û–°–¢–¨ –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø:")
try:
    repo_response = requests.get(f"https://api.github.com/repos/{GITHUB_REPO}")
    if repo_response.status_code == 200:
        repo_data = repo_response.json()
        print(f"‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–æ—Å—Ç—É–ø–µ–Ω: {repo_data['full_name']}")
        print(f"üìä –ü–æ—Å–ª–µ–¥–Ω–∏–π push: {repo_data['pushed_at']}")
        print(f"üåø –í–µ—Ç–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {repo_data['default_branch']}")
        print(f"üîì –ü—É–±–ª–∏—á–Ω—ã–π: {not repo_data['private']}")
    else:
        print(f"‚ùå –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {repo_response.status_code}")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: {e}")

# 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook GitHub
print("\n5Ô∏è‚É£ WEBHOOKS –í GITHUB –†–ï–ü–û–ó–ò–¢–û–†–ò–ò:")
print("(–¢—Ä–µ–±—É–µ—Ç —Ç–æ–∫–µ–Ω GitHub –¥–ª—è –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏)")
print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ GitHub: Settings ‚Üí Webhooks")
print("–î–æ–ª–∂–µ–Ω –±—ã—Ç—å webhook –¥–ª—è Digital Ocean App Platform")

# 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é
print("\n6Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:")
print("1. –ó–∞–π–¥–∏—Ç–µ –≤ Digital Ocean ‚Üí Apps ‚Üí artemassyst")
print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Settings ‚Üí General")
print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Source Code (GitHub integration)")
print("4. –ï—Å–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω - –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç–µ GitHub")
print("5. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã–±—Ä–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏ –≤–µ—Ç–∫–∞")
print("6. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Auto Deploy –≤–∫–ª—é—á–µ–Ω")

# 7. –¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–∏—Ç
print("\n7Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–í–¢–û–î–ï–ü–õ–û–Ø:")
print("–ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
print("1. –°–¥–µ–ª–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–∏—Ç: git commit --allow-empty -m 'test autodeploy'")
print("2. git push origin main")
print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—è–≤–∏–ª—Å—è –ª–∏ –Ω–æ–≤—ã–π –¥–µ–ø–ª–æ–π –≤ Digital Ocean")

print("\n" + "="*60)
print("üéØ –†–ï–ó–£–õ–¨–¢–ê–¢: –ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ GitHub integration –≤ Digital Ocean")
print("="*60)