#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Google Sheets –¥–ª—è –±–æ—Ç–∞ –ê–ª–µ–Ω–∞
"""

import asyncio
import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from bot.integrations.google_sheets_service import GoogleSheetsService
from bot.memory.memory_service import MemoryService
from bot.memory.analytics import AnalyticsService
from bot.config import ZEP_API_KEY

async def test_google_sheets_integration():
    """–¢–µ—Å—Ç Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"""
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ Google Sheets –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤...")
        memory_service = MemoryService(ZEP_API_KEY or "", enable_memory=bool(ZEP_API_KEY))
        analytics_service = AnalyticsService(ZEP_API_KEY or "")
        
        sheets_service = GoogleSheetsService(memory_service, analytics_service)
        print("‚úÖ –°–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        print("\nüîê –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
        auth_result = await sheets_service.authenticate()
        if auth_result:
            print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
            return False
        
        # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
        print("\nüìä –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è Google —Ç–∞–±–ª–∏—Ü—ã...")
        spreadsheet_id = await sheets_service.create_spreadsheet()
        if spreadsheet_id:
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞: {spreadsheet_id}")
            sheets_url = await sheets_service.get_spreadsheet_url()
            print(f"üîó URL: {sheets_url}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã")
            return False
        
        # –¢–µ—Å—Ç health check
        print("\nüîç –¢–µ—Å—Ç health check...")
        health = await sheets_service.health_check()
        if health:
            print("‚úÖ Health check –ø—Ä–æ–π–¥–µ–Ω")
        else:
            print("‚ùå Health check –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
        
        # –¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö (–ø—É—Å—Ç—ã—Ö)
        print("\nüîÑ –¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö...")
        sync_leads = await sheets_service.sync_leads_data(days=7)
        sync_analytics = await sheets_service.sync_analytics_data(days=7)
        
        if sync_leads and sync_analytics:
            print("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–∞")
        else:
            print("‚ö†Ô∏è –ß–∞—Å—Ç–∏—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–∞–Ω–Ω—ã—Ö)")
        
        print(f"\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä Google —Ç–∞–±–ª–∏—Ü–∞ –≥–æ—Ç–æ–≤–∞: {sheets_url}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        import traceback
        traceback.print_exc()
        return False

async def test_sheets_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ª–∏—Å—Ç–æ–≤"""
    print("\nüîß –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ª–∏—Å—Ç–æ–≤...")
    
    from bot.integrations.sheets_config import SHEET_CONFIGURATIONS
    
    for sheet_key, config in SHEET_CONFIGURATIONS.items():
        print(f"üìã –õ–∏—Å—Ç '{config['name']}': {len(config['headers'])} –∫–æ–ª–æ–Ω–æ–∫")
        
        if sheet_key == 'clients':
            print("   –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤:")
            for i, header in enumerate(config['headers'][:10]):  # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ 10
                print(f"   {i+1:2d}. {header}")
            if len(config['headers']) > 10:
                print(f"   ... –∏ –µ—â–µ {len(config['headers']) - 10} –ø–æ–ª–µ–π")

if __name__ == "__main__":
    print("üöÄ Google Sheets Integration Test")
    print("=" * 50)
    
    # –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    asyncio.run(test_sheets_config())
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
    print("\n" + "=" * 50)
    result = asyncio.run(test_google_sheets_integration())
    
    if result:
        print("\nüéØ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Google Sheets —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GOOGLE_SHEETS_ENABLED=true –≤ .env")
        print("2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")
        print("3. –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è")
    else:
        print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ OAuth2.")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ credentials/client_secret.json")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Google Sheets API –≤–∫–ª—é—á–µ–Ω –≤ Google Cloud Console")
        print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ redirect URI –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö OAuth2")